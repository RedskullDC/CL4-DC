head	1.1;
access;
symbols;
locks
	leslie:1.1; strict;
comment	@ * @;


1.1
date	2014.11.17.05.47.31;	author leslie;	state Exp;
branches;
next	;


desc
@initial checkin
@


1.1
log
@Initial revision
@
text
@#ifndef GETR_C
#define GETR_C

#include "DBdefs.h"
#include "cl4.h"

// ** not public in libcl4 **

int _getr(int TDNo, char *WorkArea1, char *WorkArea2, POS *Pos, int Lock)
{
	TDinfo *TDptr;
	char *v9;
	PAGE *PageBuff;
	int v7;
	short Depth;
	int PageList[6];
	short N1_2idx;

	//printf("_getr( TDno: x%04X (%3d),WorkArea1 = %s, WorkArea2 = %s, POS = x%08X, Lock: %d)\n", TDNo,TDNo,WorkArea1,WorkArea2,Pos,Lock);
	TDptr = _chktd(TDNo);
	if ( !(TDptr->field_0 & 8) )
		derror(36, 0, TDptr);
	TDptr->KeyDefSize = rtokey(TDptr->TDKeyDefs, WorkArea2, Pos, TDptr->TableDefs);
	//printf("_getr: KeyDefSize = %3d\n",TDptr->KeyDefSize);
	if ( !Lock || (v7 = -10, _lockr(TDptr->TDDBinfo, TDptr->TDindexOff, TDptr->TDKeyDefs, TDptr->KeyDefSize, 2)) )
	{
		Depth = _getpath(PageList, TDptr);
		v7 = 0;
		if ( Depth )
		{
			PageBuff = _datapg(TDptr, PageList[Depth - 1]);
			v7 = _scanpg((void*)PageBuff, TDptr, &N1_2idx, 9);
			if ( v7 )
			{
				//printf("_getr: N1_2idx = %3d\n",N1_2idx);
				v9 = _itoptr(PageBuff, N1_2idx);
				//printf("_getr: v9      = x%08X\n",v9);
				tuptor(WorkArea1, Pos, v9, TDptr->TableDefs);
				//printf("_getr: RecSize = %d\n",TDptr->TDRecSize);
				//DumpBlock(WorkArea1, TDptr->TDRecSize);

			}
		}
	}
	return v7;
}

// ** HACK! Should be called through xenter()

short getr(int TDno, char *WorkArea, POS *Pos)
{
	return _getr(TDno, WorkArea, WorkArea, Pos, 0);
}

short lgetr(int TDNo, char *WorkArea1, POS *Pos)
{
	return _getr(TDNo, WorkArea1, WorkArea1, Pos, 1);
}

short retrieve(int TDno, char *WorkArea1, char *WorkArea2)
{
	//return xenter(getr, TDno, WorkArea1, WorkArea2, 0, 0);
	return _getr(TDno, WorkArea1, WorkArea2, 0, 0);
}

short lretrieve(int TDno, char *WorkArea1, char *WorkArea2)
{
	//return xenter(getr, TDno, WorkArea1, WorkArea2, 0, 0);
	return _getr(TDno, WorkArea1, WorkArea2, 0, 1);
}


#endif
@
