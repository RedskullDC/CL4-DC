head	1.7;
access;
symbols;
locks
	leslie:1.7; strict;
comment	@ * @;


1.7
date	2016.07.29.01.19.00;	author leslie;	state Exp;
branches;
next	1.6;

1.6
date	2016.06.06.06.16.45;	author leslie;	state Exp;
branches;
next	1.5;

1.5
date	2015.10.26.23.23.06;	author leslie;	state Exp;
branches;
next	1.4;

1.4
date	2015.07.16.07.47.25;	author leslie;	state Exp;
branches;
next	1.3;

1.3
date	2015.06.25.11.59.49;	author leslie;	state Exp;
branches;
next	1.2;

1.2
date	2015.06.15.06.15.25;	author leslie;	state Exp;
branches;
next	1.1;

1.1
date	2014.09.09.03.38.47;	author leslie;	state Exp;
branches;
next	;


desc
@initial checkin
@


1.7
log
@tidy-up
@
text
@#ifndef LERFILE_C
#define LERFILE_C
#include "lvarnames.h"			// for flag bits

short aliasexp()
{
	RTAB *v5;
	RTAB *rt;
	short RTno;
	short expno;
	short v4;

	eprint("aliasexp()\n");			// example:  "replace t1 dbname 'Tranfl1' 'tf1'"
	if ( symbol == 930 )
	{
		loaderr(7, sym);			// "unexpected end of line"
		return 0;
	}
	RTno = getrtmem();
	allrtpt(RTno, &rt);
	if ( symbol != 930 )			// always true due to test above
	{
		while ( symbol )
		{
		   expno = loadexp(0, 1);	// look for string literal or variable name
		   if ( !expno )
				break;
		   rt->field_E = expno;
		   if ( symbol != 930 )
		   {
				v4 = getrtmem();
				if ( !v4 )
					 __assert_fail("tmpidx > 0", "lerfile.c", 0x2Bu, "aliasexp");
				rt->NextRT = v4;
				v5 = RTARR(rt->NextRT);
				rt = v5;
		   }
		   if ( symbol == 930 )		// <CR>
				goto LABEL_16;
		}
		dallrtpt(&rt);
		return 0;			// error exit
	}
LABEL_16:
	dallrtpt(&rt);
	return RTno;
}

int lerfile(int *a1, short OpSymbol)
{
	PTAB	*pt;
	TDesc	*TTptr;
	RTAB	*rt;

	int		TDno;
	short	expno;
	short	RTno;
	 
    pt = PTARR(getptabp((*a1)++));
    pt->OpCode		= 400;					// default to a no-op
    pt->SrcLineNo	= lla;
    symbol = getsym();
    if ( symbol != 2230 )
    {
         if ( symbol == 930 )
              loaderr(40, sym);				// "missing table/alias"
         else
              loaderr(39, sym);				// "invalid table/alias"
         return 0;
    }
    RTno = getrtmem();
    allrtpt(RTno, &rt);
    TDno = findtd(sym, -1);
    if ( TDno < 0 )
    {
        loaderr(14, sym);						 // "table not open"
        dallrtpt(&rt);
		return 0;
    }
//---------------------------
	rt->TTno  = TDno;
    TTptr	  = &ttab[rt->TTno];
	pt->TABno = RTno;
	
	switch (OpSymbol)
	{
		case 55:							// "replace"	** Undocumented in CL4 GeFahr! ** ??
			rt->OpType		= 0x0800u;
			pt->OpCode		= 530;
			break;
		case 160:							// "clear"
			rt->OpType		= 0x0020u;
			pt->OpCode		= 580;
			break;
		case 300:							// "delete"
			rt->OpType		= 0x0010u;
			pt->OpCode		= 570;
			TTptr->TDlocked	|= ttl_DEL;		// 0x8000
			break;
		case 580:							// "getnext"
			rt->OpType		= 0x0002;		// OpType specifies direction: next or prev
			pt->OpCode		= 520;
			TTptr->TDlocked	|= ttl_GETNP;	// 0x0100;
			break;
		case 590:							// "getprev"
			rt->OpType		= 0x0004;
			pt->OpCode		= 515;
			TTptr->TDlocked	|= ttl_GETNP;	// 0x0100;
			break;
		case 600:							// "get"
			rt->OpType		= 0x0001;
            pt->OpCode		= 510;
            TTptr->TDlocked	|= ttl_GET;		// 0x0004;
			break;
		case 1220:							// "put"
			rt->OpType		= 0x0008;
            pt->OpCode		= 530;
            TTptr->TDlocked	|= ttl_PUT;		// 0x0002;
			break;
	}

	//---- lock / lockr ----

	symbol = getsym();
    if ( symbol == 790 )					// "lockr"
	{
        if ( rt->OpType & 0xFFF8 )			// 1111 1111 1111 1000
		{
	        loaderr(66, sym);				// "only valid with 'get','getnext','getprev' statements"
		    dallrtpt(&rt);
			return 0;
        }
        rt->LockType		|= 0x0400;
        TTptr->TDlocked		|= ttl_LOCKR;	// 0x0080;
		symbol = getsym();
    }
    else if ( symbol == 800 )				// "lock"
	{
		rt->LockType	|= 0x0200;
		TTptr->TDlocked	|= ttl_LOCK;		// 0x0001;
		symbol = getsym();
	}

	//----  all/where ----
    if ( rt->OpType & 0x0007 )				// ('get','getnext','getprev')
	{
		if ( symbol == 70 )					// all
		{
			rt->OpType |= 0x0100;
			symbol = getsym();
		}
		else if ( symbol == 1720 )			// where
		{
			symbol = getsym();
			expno = loadexp(1, 1);			// get the "where" expression
			if ( !expno )
			{
				dallrtpt(&rt);
				return 0;					// error
			}
			rt->WhereEXP = expno;
		}
	}
    else if ( rt->OpType & 0x0800 )			// replace  *EVIL*
	{
		expno = aliasexp();					// example:  "replace t1 dbname 'Tranfl1' 'tf1'"
		if ( !expno )
		{
			dallrtpt(&rt);
			return 0;
		}
		rt->NextRT = expno;
	}

	if ( symbol != 930 )			// <CR> expected to follow
    {
        loaderr(33, sym);			// unexpected symbol
        dallrtpt(&rt);
		return 0;
    }
    dallrtpt(&rt);
	return 1;						// exit_success
}



#endif
@


1.6
log
@intermediate
@
text
@d7 37
a43 37
     RTAB *v5;
	 RTAB *rt;
	 short RTno;
	 short expno;
	 short v4;
	 
eprint("aliasexp()\n");
     if ( symbol == 930 )
     {
          loaderr(7, sym);                      // "unexpected end of line"
          return 0;
     }
     RTno = getrtmem();
     allrtpt(RTno, &rt);
     if ( symbol != 930 )
     {
          while ( symbol )
          {
               expno = loadexp(0, 1);	// look for string literal or variable name
               if ( !expno )
                    break;
               rt->field_E = expno;
               if ( symbol != 930 )
               {
                    v4 = getrtmem();
                    if ( !v4 )
                         __assert_fail("tmpidx > 0", "lerfile.c", 0x2Bu, "aliasexp");
                    rt->NextRT = v4;
                    v5 = RTARR(rt->NextRT);
					rt = v5;
               }
               if ( symbol == 930 )		// <CR>
                    goto LABEL_16;
          }
          dallrtpt(&rt);
          return 0;			// error exit
     }
d45 2
a46 2
     dallrtpt(&rt);
     return RTno;
d81 2
a82 2
	rt->TTno = TDno;
    TTptr = &ttab[rt->TTno];
d121 3
a123 1
//--- lock / lockr 
d125 1
a125 1
    if ( symbol == 790 )                       // "lockr"
d127 1
a127 1
        if ( rt->OpType & 0xFFF8 )		// 1111 1111 1111 1000
d129 1
a129 1
	        loaderr(66, sym);        // "only valid with 'get','getnext','getprev' statements"
d137 1
a137 1
    else if ( symbol == 800 )			// "lock"
d144 2
a145 2
//-------------------
    if ( !(rt->OpType & 0x0007) )		// !('get','getnext','getprev')
d147 1
a147 1
        if ( rt->OpType & 0x0800 )	// replace  *EVIL*
d149 7
a155 1
			expno = aliasexp();		// not sure what kind of expression this is looking for
d159 1
a159 1
				return 0;
d161 1
a161 1
			rt->NextRT = expno;
d163 2
a164 7
    }
    else if ( symbol == 70 )		// all
	{
        rt->OpType |= 0x0100;
        symbol = getsym();
    }
    else if ( symbol == 1720 )		// where
d166 2
a167 3
        symbol = getsym();
        expno = loadexp(1, 1);
        if ( !expno )
d170 4
a173 4
			return 0;				// error
        }
		rt->WhereEXP = expno;
    }
d175 1
a175 1
    if ( symbol != 930 )			// <CR> expected to follow
@


1.5
log
@intermediate
@
text
@d3 1
d25 1
a25 1
               expno = loadexp(0, 1);
d51 7
a57 4
     PTAB	*pt;
	 TDesc	*v15;
	 RTAB	*rt;
	 int	TDno;
d59 21
a79 28
     short	v2;
	 short	v3;
	 short	expno;
	 short	v14;
	 
     v2 = (*a1)++;
     v3 = getptabp(v2);
     pt = PTARR(v3);
     pt->OpCode = 400;
     pt->SrcLineNo = lla;
     symbol = getsym();
     if ( symbol != 2230 )
     {
          if ( symbol == 930 )
               loaderr(40, sym);				// "missing table/alias"
          else
               loaderr(39, sym);				// "invalid table/alias"
          return 0;
     }
     v14 = getrtmem();
     allrtpt(v14, &rt);
     TDno = findtd(sym, -1);
     if ( TDno < 0 )
     {
          loaderr(14, sym);						 // "table not open"
          dallrtpt(&rt);
          return 0;
     }
d81 3
a83 3
	 rt->TTno = TDno;
     v15 = &ttab[rt->TTno];
     pt->TABno = v14;
d87 1
a87 1
		case 55:							// "replace"	** Unreachable in CL4 clenter ** ??
d98 1
a98 1
			v15->TDlocked	|= 0x8000;
d101 1
a101 1
			rt->OpType		= 0x0002;
d103 1
a103 1
			v15->TDlocked	|= 0x0100;
d108 1
a108 1
			v15->TDlocked	|= 0x0100;
d113 1
a113 1
            v15->TDlocked	|= 0x0004;
d118 1
a118 1
            v15->TDlocked	|= 0x0002;
d132 1
a132 1
        v15->TDlocked		|= 0x0080;
d135 1
a135 1
    else if ( symbol == 800 )                  // "lock"
d138 1
a138 1
		v15->TDlocked	|= 0x0001;
d145 1
a145 1
        if ( rt->OpType & 0x0800 )	// replace  *not reachable in V4?*
d168 1
a168 1
			return 0;
@


1.4
log
@intermediate
@
text
@d8 2
a9 2
	 short v1;
	 short v3;
d18 2
a19 2
     v1 = getrtmem();
     allrtpt(v1, &rt);
d24 2
a25 2
               v3 = loadexp(0, 1);
               if ( !v3 )
d27 1
a27 1
               rt->field_E = v3;
d37 1
a37 1
               if ( symbol == 930 )
d40 2
a41 2
          dallrtpt(&rt);	// error exit
          return 0;
d45 1
a45 1
     return v1;
d57 1
a57 1
	 short	v9;
d124 1
a124 1
//---------------	
d150 2
a151 2
			v9 = aliasexp();		// not sure what kind of expression this is looking for
			if ( !v9 )
d156 1
a156 1
			rt->NextRT = v9;
d167 2
a168 2
        v9 = loadexp(1, 1);
        if ( !v9 )
d173 1
a173 1
		rt->WhereEXP = v9;
@


1.3
log
@intermediate
@
text
@d6 7
a12 6
     short v1; // si@@5
     short v3; // dx@@7
     short v4; // dx@@9
     RTAB *v5; // eax@@12
     RTAB *rt; // [sp+18h] [bp-10h]@@3

d48 1
a48 1
int lerfile(int *a1, short Symbol)
d50 10
a59 9
     short v2; // ST00_2@@1
     short v3; // ax@@1
     PTAB *pt; // edi@@1
     int TDno; // eax@@6
     short v9; // dx@@42
     short v14; // [sp+10h] [bp-18h]@@6
     TDesc *v15; // [sp+14h] [bp-14h]@@8
     RTAB *rt; // [sp+18h] [bp-10h]@@6

d88 1
a88 1
	switch (Symbol)
d90 1
a90 1
		case 55:							// "replace"	** Unreachable in CL4 ** ??
d146 1
a146 1
    if ( !(rt->OpType & 7) )		// !('get','getnext','getprev')
d150 1
a150 1
			v9 = aliasexp();
@


1.2
log
@intermediate
@
text
@d39 1
a39 1
          dallrtpt(&rt);
d52 1
a52 1
     int v6; // eax@@6
a53 1
     short v10; // dx@@45
d74 2
a75 2
     v6 = findtd(sym, -1);
     if ( v6 < 0 )
d82 1
a82 1
	 rt->TTno = v6;
d136 1
a136 1
    else
d138 3
a140 6
        if ( symbol == 800 )                  // "lock"
		{
            rt->LockType	|= 0x0200;
            v15->TDlocked	|= 0x0001;
			symbol = getsym();
		}
d142 1
d144 1
a144 1
    if ( !(rt->OpType & 7) )
d146 10
a155 9
        if ( !(rt->OpType & 0x0800) )	// !replace
			goto LABEL_47;
        v10 = aliasexp();
        if ( !v10 )
        {
			dallrtpt(&rt);
			return 0;
        }
		rt->NextRT = v10;
d157 1
a157 1
    else if ( symbol == 70 )                        // all
d162 1
a162 1
    else if ( symbol == 1720 )                      // where
d174 1
a174 2
LABEL_47:
    if ( symbol != 930 )                       // <CR>
d181 1
a181 1
	return 1;			// exit_success
@


1.1
log
@Initial revision
@
text
@a6 1
     short *v2; // edx@@5
a18 1
     v2 = &symbol;
d21 1
a21 1
          while ( *v2 )
d33 2
a34 2
                    v5 = rt->NextRT ? (RTAB *)&rtarr.TableAddr[20 * (rt->NextRT - 1)] : 0;
                    rt = v5;
a35 1
               v2 = &symbol;
d89 3
a91 3
		case 55:							// "replace"
			rt->field_2 = 0x0800u;
			pt->OpCode = 530;
d94 2
a95 2
			rt->field_2 = 0x0020u;
			pt->OpCode = 580;
d98 3
a100 3
			rt->field_2 = 0x0010u;
			pt->OpCode = 570;
			v15->TDlocked |= 0x8000;
d103 3
a105 3
			rt->field_2 = 0x0002;
			pt->OpCode = 520;
			v15->TDlocked |= 0x0100;
d108 3
a110 3
			rt->field_2 = 0x0004;
			pt->OpCode = 515;
			v15->TDlocked |= 0x0100;
d113 3
a115 3
			rt->field_2 = 0x0001;
            pt->OpCode = 510;
            v15->TDlocked |= 0x0004;
d118 3
a120 3
			rt->field_2 = 0x0008;
            pt->OpCode = 530;
            v15->TDlocked |= 0x0002;
d126 20
a145 20
     {
          if ( rt->field_2 & 0xFFF8 )
          {
	          loaderr(66, sym);        // "only valid with 'get' and 'getnext' statements"
		      dallrtpt(&rt);
	          return 0;
          }
          rt->field_0 |= 0x400u;
          v15->TDlocked |= 0x80u;
          symbol = getsym();
     }
     else
     {
          if ( symbol == 800 )                  // "lock"
          {
               rt->field_0 |= 0x200u;
               v15->TDlocked |= 1u;
               symbol = getsym();
          }
     }
d147 29
a175 31
     if ( !(rt->field_2 & 7) )
     {
          if ( !(rt->field_2 & 0x0800) )	// !replace
               goto LABEL_47;
          v10 = aliasexp();
          if ( v10 )
          {
               rt->NextRT = v10;
               goto LABEL_47;
          }
          dallrtpt(&rt);
          return 0;
     }
     if ( symbol == 70 )                        // all
     {
          rt->field_2 |= 0x100u;
          symbol = getsym();
          goto LABEL_47;
     }
     if ( symbol == 1720 )                      // where
     {
          symbol = getsym();
          v9 = loadexp(1, 1);
          if ( v9 )
          {
               rt->WhereEXP = v9;
               goto LABEL_47;
          }
          dallrtpt(&rt);
          return 0;
     }
d177 8
a184 8
     if ( symbol != 930 )                       // <CR>
     {
          loaderr(33, sym);			// unexpected symbol
          dallrtpt(&rt);
          return 0;
     }
     dallrtpt(&rt);
     return 1;
@
