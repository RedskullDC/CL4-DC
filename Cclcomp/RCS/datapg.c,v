head	1.1;
access;
symbols;
locks
	leslie:1.1; strict;
comment	@ * @;


1.1
date	2015.06.27.15.09.53;	author leslie;	state Exp;
branches;
next	;


desc
@initial checkin
@


1.1
log
@Initial revision
@
text
@#ifndef DATAPG_C
#define DATAPG_C

#include "DBdefs.h"
#include "cl4.h"

void* _datapg(TDinfo *TDptr, unsigned int PageNo)
{
	DBinfo *DBptr;
	char	*PageBuff;
	PAGE	*PagePtr;
	unsigned char PageType;
	unsigned short NumEntries;
	char *v6;
	void *v7;

	//printf("_datapg(%X,%d) -" ,TDptr,PageNo);
	//printf("DBfile %s offset = %d x %d = x%0X\n",TDptr->TDDBinfo->DBname, PageNo, TDptr->TDDBinfo->DBpgsize, PageNo*TDptr->TDDBinfo->DBpgsize);
	DBptr = TDptr->TDDBinfo;                   // Controlling DBase 
	if ( DBptr->DBmaxpages <= PageNo )           
		derror(44, 0, TDptr);
	PageBuff = _getpg(DBptr);           // Pass DBptr to calculate PageSize
	PagePtr = (PAGE *) PageBuff;
	//printf("PageBuff    = x%08X \n",PageBuff);
	if ( !_readpg(DBptr,&PageBuff[16], PageNo) )             // 16byte header
		derror(46, 0, TDptr);
	PageType = PageBuff[16];
	//printf("PageType    = x%2X \n",PageType);
	if ( (char)PageType < 0 )				// exclude page types with 80 set
		derror(39, 0, TDptr);
	NumEntries = SWAP_SHORT(&PageBuff[16]) & 0x3FFF;
	//printf("NumEntries  = x%04X (%3d) \n",NumEntries,NumEntries);
	PagePtr->NumEntries = NumEntries;

	if ( PageType & 0x40 )	// Indexed page with record offsets at the start
	{						// *variable* record size (contains string variables)
		v7 = &PageBuff[18];
		//printf("Index Table = x%08X\n",v7);
		v6 = &PageBuff[18] + 2 * NumEntries;
		//printf("Data begins = x%08X\n",v6);
		PagePtr->TabStart_or_RecSize = &PageBuff[18];
	}
	else if ( DBptr->DBvflag == 2 )          // DBversionFlag
	{
		PagePtr->TabStart_or_RecSize = (void*)TDptr->TDRecSize;
		v6 = &PageBuff[18];
	}
	else	// Version 3 or 4 DBases, *fixed* data size. (contains no strings)
	{
		v6 = &PageBuff[20];
		//printf("Data Start: = %X \n",v6);
		v7 = (void*)SWAP_SHORT(&PageBuff[18]);
		//printf("Record Size = %X \n",v7);  // 
		PagePtr->TabStart_or_RecSize = v7;
	}
	PagePtr->TabEnd = v6;
	
	if ( !_chkpage(TDptr, PagePtr) )
		derror(50, 0, TDptr);
	return PageBuff;
}


#endif
@
