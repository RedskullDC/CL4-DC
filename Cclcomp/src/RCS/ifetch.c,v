head	1.1;
access;
symbols;
locks
	leslie:1.1; strict;
comment	@ * @;


1.1
date	2015.06.28.09.09.34;	author leslie;	state Exp;
branches;
next	;


desc
@intermediate
@


1.1
log
@Initial revision
@
text
@#ifndef INDEX_FETCH_C
#define INDEX_FETCH_C

#include <stdio.h>
#include <stdarg.h>		// for var args stuff
#include "DBdefs.h"
#include "cl4.h"

// Increasing fetch [see also _dfetch()]

short _ifetch(char *Dest, DPOS *dpos, TDinfo *TDptr)
{
	NODE *node; // edx@@2	
	PAGE *page; // esi@@6
	short v6; // ax@@12
	NODE_1 *N1p; // eax@@12
	short v9; // [sp+18h] [bp-10h]@@9

printf("_ifetch(Dest : x%08X, DPOS : x%08X, TDptr :x%08X)\n",Dest,dpos,TDptr);

	node = TDptr->TDNodePtr;
	if ( node && node->PageNo != dpos->PageNo  )
	{
		relnode(node);
		TDptr->TDNodePtr = 0;
	}

	if ( dpos->PageNo )
		goto LABEL_17;

	if ( dpos->field_8 )
	{
		++fcount;	// fetch count? Only ever accessed from here.
		page = _indexpg(TDptr, dpos->field_8);
		dpos->PageNo = mstol((int*)&page->DataStart[4 * dpos->NumEntries++]);
		if ( page->NumEntries < dpos->NumEntries )
		{
			dpos->field_8 = mstol((int*)&page->field_16);
			dpos->NumEntries = 0;
		}
	}

//-----------------------------------  
	if ( dpos->PageNo )
	{
LABEL_17:
		if ( !TDptr->TDNodePtr )
			TDptr->TDNodePtr = getnode(TDptr, dpos->PageNo, 0);
		node = TDptr->TDNodePtr;

		v6 = dpos->field_4;
		dpos->field_4 = v6 + 1;
		N1p = &node->NODE1ptr[v6];
		v9 = cpybuf(Dest, N1p->Data, N1p->Size);
		if ( node->NumEntries <= dpos->field_4 )
		{
			relnode(TDptr->TDNodePtr);
			TDptr->TDNodePtr = 0;
			dpos->PageNo = 0;
			dpos->field_4 = 0;
		}
	}
	else
	{
		v9 = 0;
	}
	return v9;
}

#endif
@
