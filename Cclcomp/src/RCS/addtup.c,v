head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2014.07.14.04.17.59;	author leslie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#ifndef ADDTUPLE_C
#define ADDTUPLE_C

#include "DBdefs.h"
#include "cl4.h"
#include "lvarnames.h"			// for TDFtype bit field values

// not public
void sum(char *a1, char *a2, short TDFsize)
{
	short Carry; // si@@1
	int v4; // ecx@@1
	short v5; // ax@@2
	short v6; // ax@@4

	Carry = 0;
	v4 = (TDFsize - 1);
	v6 = v4;
	while ( v6 >= 0 )
	{
		v5 = a2[v4] + a1[v4] + 1;
		if ( !(Carry & 0x100) )
			v5 = a2[v4] + a1[v4];
		Carry = v5;
		a1[v4] = v5;
		v6 = --v4;
	}
}

void _addtuple(char *Buffer1, char *Buffer2,TDef *TDefPtr)
{
	char *v3; // edi@@1
	TDef *tdef; // esi@@1
	short v5; // eax@@6
	short v6; // eax@@9

	//printf("_addtuple(Buffer1: %S,Buffer2 = %Sd, TDef = x%08X)\n" ,Buffer1,Buffer2,TDefPtr);

	v3 = Buffer2;
	for ( tdef = TDefPtr; tdef->TDFentry; tdef++ )
	{
		if ( !(tdef->TDFtype & tdf_KEY) && tdef->TDFtype & 0x0FC0 )
			sum(Buffer1, v3, tdef->TDFsize);
		
		if ( tdef->TDFtype & tdf_STRING )
			v5 = _fwidth(Buffer1, tdef->TDFsize, tdef->TDFtype);
		else
			v5 = tdef->TDFsize;
		
		Buffer1 += v5;
		
		if ( tdef->TDFtype & tdf_STRING )
			v6 = _fwidth(v3, tdef->TDFsize, tdef->TDFtype);
		else
			v6 = tdef->TDFsize;
		
		v3 += v6;
  }
}

#endif
@
