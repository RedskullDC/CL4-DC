head	1.1;
access;
symbols;
locks
	leslie:1.1; strict;
comment	@ * @;


1.1
date	2014.09.05.11.22.40;	author leslie;	state Exp;
branches;
next	;


desc
@initial checkin
@


1.1
log
@Initial revision
@
text
@#ifndef ARG_FNS_C
#define ARG_FNS_C

#include <stdio.h>
#include <stdarg.h>		// for var args stuff
#include "DBdefs.h"
#include "cl4.h"

char *Arg_String(void)
{
    STACKENT *v0; // eax@@2

    Arg_Trav = (STACKENT **)Arg_Trav[3];
    if ( Arg_Trav == Arg_End )
        return 0;
    v0 = Arg_Trav[1];
    if ( v0->stType != 2 )
    {
        fwrite("function wanted string parameter\n", 1u, 0x21u, stderr);
        return 0;
    }
    return (char *)v0->stValue;
}

int Arg_Digit(void)
{
    STACKENT *v0; // eax@@2

    Arg_Trav = (STACKENT **)Arg_Trav[3];
    if ( Arg_Trav == Arg_End )
        return 0;
    v0 = Arg_Trav[1];
    if ( v0->stType != 4 )
    {
        fwrite("function wanted digit parameter\n", 1u, 0x20u, stderr);
        return 0;
    }
    return v0->stValue;
}

void Arg_Action(STACKENT *a1)
{
    STACKENT *v1; // edx@@3

    Arg_Trav = (STACKENT **)Arg_Trav[3];
    if ( Arg_Trav == Arg_End )
    {
        fwrite("No items left in Arg_Action!!!!\n", 1u, 32u, stderr);
    }
    else
    {
        v1 = Arg_Trav[1];
        a1->stValue = v1->stValue;
        *(int *)&a1->stType = *(int *)&v1->stType;
    }
}

#endif
@
