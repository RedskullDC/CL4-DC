head	1.1;
access;
symbols;
locks
	leslie:1.1; strict;
comment	@ * @;


1.1
date	2014.11.20.05.58.35;	author leslie;	state Exp;
branches;
next	;


desc
@initial checkin
@


1.1
log
@Initial revision
@
text
@#ifndef LOCKREC_C
#define LOCKREC_C

#include "DBdefs.h"
#include "cl4.h"

int _lockr(DBinfo *DBptr, short IndexOff, char *KeyDefs, unsigned int KeySize, short a5)
{
	int result; // eax@@2
	short v6; // ax@@3
	unsigned int v7; // eax@@5
	int PID; // eax@@7
	TDinfo *TD2; // eax@@7
	TD2REC Dest; // [sp+30h] [bp-A8h]@@5

	//printf("_lockr(DBptr: x%08X,Idx: x%04X, KeySize = %d)\n" ,DBptr,IndexOff, KeySize);

	if ( DBptr->DBvflag > 3 )                     // Only V4 DBases have a locks table?
	{
		v6 = check_bup_sem(DBptr);                  // Check BitMap update??
		if ( v6 )
			derror(v6, DBptr, 0);
		Dest.TableIndex = IndexOff;                 // 1 byte table index offset
		fill(Dest.KeyBuff, 128u, 0);
		//DumpBlock((char*)&Dest, sizeof(Dest));
		if ( KeySize > 128 )
			KeySize = 128;
		//printf("_lockr &Dest.KeyBuff = x%08X, Dest.KeyBuff = x%08X\n",&Dest.KeyBuff, Dest.KeyBuff);
		cpybuf(Dest.KeyBuff, KeyDefs, KeySize);
		PID = getpid();
		ltoms(&Dest.PID, PID);
		//printf("_lockr PID = x%08X, &Dest.PID = x%08X\n",PID,&Dest.PID);
		//DumpBlock((char*)&Dest, sizeof(Dest));
		TD2 = _chktd(2);			// TD2 = locks table
		TD2->TDDBinfo = DBptr;		// insert current DB
		result = _update(TD2,(char*)&Dest, 0, a5, 0);
	}
	else
	{
		result = 0;
	}
	return result;
}

#endif
@
