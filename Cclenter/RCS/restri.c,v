head	1.3;
access;
symbols;
locks
	leslie:1.3; strict;
comment	@ * @;


1.3
date	2016.03.23.02.48.12;	author leslie;	state Exp;
branches;
next	1.2;

1.2
date	2015.06.16.02.59.07;	author leslie;	state Exp;
branches;
next	1.1;

1.1
date	2014.11.17.09.40.55;	author leslie;	state Exp;
branches;
next	;


desc
@initial checkin
@


1.3
log
@intermediate
@
text
@#ifndef RESTRICT_C
#define RESTRICT_C

#include <sys/param.h>			// for MIN/MAX
#include "DBdefs.h"
#include "cl4.h"
#include "lvarnames.h"			// for bit field values

int getwpos(char *Buffer, short Size)
{
	int v2; // edx@@1
	char *v3; // eax@@1
	char v4; // dl@@4
	int result; // eax@@7

	printf("getwpos( Buffer: x%08X , Size: x%04X (%d)\n", Buffer, Size, Size);

	v2 = Size;
	v3 = Buffer;
	//DumpBlock(Buffer,Size);

	if ( !Size || !*Buffer )
		return -1;
	while ( *v3 >= 0 )			// while normal ascii
	{
		++v3;
		--v2;
		if ( !v2 || !*v3 )
			return -1;			// reached end of string, or field size, and no wildcard found
	}
	v4 = *v3;
	
	// Wildcard chars with the high bit set

	// if ( v6 == '*' || v6 == '?' || v6 == '[')
    // if ( v6 == 0x2A || v6 == 0x3F || v6 == 0x5B)

	if ( v4 == 0xAAu || v4 == 0xBFu || v4 == 0xDBu )
	//if ( v4 == -86 || v4 == -65 || v4 == -37 )
		result = v3 - Buffer;	// wildcard found at Buffer offset
	else
		result = -1;	// -1 means wildcard not found
	//printf("getwpos: result = %d\n",result);
	return result;
}

// ** Not public in libcl4 **
short xkey(char *KeyBuf, EXPR *Expr, short Operator, TDef *tdef)
{
	EXPR *expr;
	char *dest;

	dest = KeyBuf;
	*KeyBuf = 0;
	
	while ( tdef->TDFentry && tdef->TDFtype & tdf_KEY )	// only look at Key fields
	{
		expr = _bound(Expr, Operator, tdef);
		if ( !expr || tdef->TDFtype & tdf_STRING && getwpos(&expr->ExprData, expr->ExprSize) >= 0 )
			break;

		dest += cpybuf(dest, &expr->ExprData, MIN(expr->ExprSize,tdef->TDFsize));

		if ( tdef->TDFsize > expr->ExprSize )
		{
			if ( !(tdef->TDFtype & tdf_STRING) || *(dest - 1) )
				break;
		}
		tdef++;
	}
	return dest - KeyBuf;
}

// ** Not public in libcl4 **
short _restrict(int TDNo, EXPR *Expression)
{
	TDinfo *TDptr; 
	short result = 0;

	TDptr = _chktd(TDNo);
	relseq(TDptr);
	TDptr->KeyDefSize = 0;

  	//printf("_restrict( TDno: x%04X (%3d), EXPR: x%08X, TD->f0 x%04X)\n", TDNo,TDNo,Expression, (unsigned short)TDptr->field_0);

	TDptr->TDFlags &= 0xFDEF;			// 1111 1101 1110 1111

	if ( TDptr->TDFlags & 0x0002 )
		TDptr->TDFlags |= 0x1000;

	if ( TDptr->TDFlags & 0x0008 )
	{
		newseq(TDptr);
		TDptr->Key1Size = xkey(TDptr->KeyBuf1, Expression, 0x30u, TDptr->TableDefs);	// 0x30 == ">="
		TDptr->field_3A = 1;
		TDptr->Key2Size = xkey(TDptr->KeyBuf2, Expression, 0x18u, TDptr->TableDefs);	// 0x18 == "<="
		TDptr->field_42 = 2;
		//result = 0;
		if ( TDptr->Key1Size || TDptr->Key2Size )
			result = 1;
	}
	return result;
}

// HACK!!  Should call through xenter()

short cdbrestrict(int TDno,EXPR *Expr)
{
  return _restrict(TDno, Expr);
}

#endif
@


1.2
log
@intermediate
@
text
@d16 1
a16 1
	//printf("getwpos( Buffer: x%08X , Size: x%04X (%d)\n", Buffer, Size, Size);
d24 1
a24 1
	while ( *v3 >= 0 )
d29 1
a29 1
			return -1;
d33 1
a33 2
	// Not sure what these particular signature bytes mean.....
	// Wildcard chars?
d35 2
a36 3
	// if ( *v3 == 170 || v4 == 191 || v4 == 219 )
	// if ( *v3 == 0xAAu || v4 == 0xBFu || v4 == 0xDBu )
	//  if ( *v3 == '¬' || v4 == '+' || v4 == '¦' )
d38 2
a39 1
	if ( v4 == -86 || v4 == -65 || v4 == -37 )
a50 2
	//short v7;
	//short v9;
a61 5
		//v9 = expr->ExprSize;
		//v7 = v9;
		//if ( v9 > tdef->TDFsize )
		//	v7 = tdef->TDFsize;
		//dest += cpybuf(dest, &expr->ExprData, v7);
a63 1
		//if ( tdef->TDFsize > v9 )
d86 1
a86 1
	TDptr->field_0 &= 0xFDEF;			// 1111 1101 1110 1111
d88 2
a89 2
	if ( TDptr->field_0 & 0x0002 )
		TDptr->field_0 |= 0x1000;
d91 1
a91 1
	if ( TDptr->field_0 & 0x0008 )
a101 5
	//else
	//{
	//	result = 0;
	//}
	//printf("_restrict result = %d\n",result);
@


1.1
log
@Initial revision
@
text
@d4 1
d47 1
d49 1
a49 1
short xkey(char *KeyBuf, EXPR *Expr, short Operator, TDef *TdefPtr)
d51 3
a53 5
	TDef *tdef;
	EXPR *v5;
	EXPR *v6;
	short v7;
	short v9;
a57 1
	tdef = TdefPtr;
d61 2
a62 3
		v5 = _bound(Expr, Operator, tdef);
		v6 = v5;
		if ( !v5 || tdef->TDFtype & tdf_STRING && getwpos(&v5->ExprData, v5->ExprSize) >= 0 )
d64 10
a73 6
		v9 = v6->ExprSize;
		v7 = v9;
		if ( v9 > tdef->TDFsize )
			v7 = tdef->TDFsize;
		dest += cpybuf(dest, &v6->ExprData, v7);
		if ( tdef->TDFsize > v9 )
d78 1
a78 1
		++tdef;
d87 1
a87 1
	short result;
a88 1
	//printf("_restrict( TDno: x%04X (%3d), EXPR: x%08X)\n", TDNo,TDNo,Expression);
d92 5
a96 2
  
	TDptr->field_0 &= 0xFDEF;
d103 1
a103 1
		TDptr->Key1Size = xkey(TDptr->KeyBuf1, Expression, 0x30u, TDptr->TableDefs);
d105 1
a105 1
		TDptr->Key2Size = xkey(TDptr->KeyBuf2, Expression, 0x18u, TDptr->TableDefs);
d107 1
a107 1
		result = 0;
d111 5
a115 4
	else
	{
		result = 0;
	}
@
