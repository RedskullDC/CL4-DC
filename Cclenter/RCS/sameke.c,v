head	1.3;
access;
symbols;
locks
	leslie:1.3; strict;
comment	@ * @;


1.3
date	2017.01.11.02.20.43;	author leslie;	state Exp;
branches;
next	1.2;

1.2
date	2015.10.30.05.29.09;	author leslie;	state Exp;
branches;
next	1.1;

1.1
date	2014.12.16.05.12.33;	author leslie;	state Exp;
branches;
next	;


desc
@initial checkin
@


1.3
log
@cleanup
@
text
@#ifndef SAMEKEY_C
#define SAMEKEY_C

#include <stdio.h>
#include <stdarg.h>		// for var args stuff
#include <ctype.h>		// tolower() etc.
#include <stdlib.h>		// strtod() etc.
#include "DBdefs.h"
#include "cl4.h"
#include "lvarnames.h"			// for bit field values

// only called by join()
bool samekey(int TDno, char *Workarea, int TDno2, char *Workarea2)
{
    TDef	*tdef1;
	TDef	*tdef2;
	char	*Buffer;
	char	*src;
	int		v6;
    int		v7;

	//printf("samekey\n");
    tdef1 = tblrow(TDno);
    if ( tdef1 && tblrow(TDno2) )
    {
        src = Workarea;
        while ( tdef1->TDFtype & tdf_KEY)            // &1 == Key field
        {
            tdef2	= tblrow(TDno2);
            Buffer	= Workarea2;
			while ( tdef2->TDFentry )
			{
                if ( tdef2->TDFentry == tdef1->TDFentry )
                {
					if ( _cmpattrib(src, tdef1->TDFsize, Buffer, tdef2->TDFsize, tdef1->TDFtype)
					  || (v6 = (tdef1->TDFtype & 2) ? _fwidth(src, tdef1->TDFsize, tdef1->TDFtype) : tdef1->TDFsize,
						  v7 = (tdef2->TDFtype & 2) ? _fwidth(Buffer, tdef2->TDFsize, tdef2->TDFtype) : tdef2->TDFsize, v6 != v7))
						return false;	// exit_fail. The Key areas don't match
                }
                Buffer += tdef2->TDFsize;
                tdef2++;
			}
            src += tdef1->TDFsize;
            tdef1++;
        }
        return true;	// exit_success. they match
    }
    else
        return false;	// exit_fail. They Key areas don't match
}
#endif
@


1.2
log
@intermediate
@
text
@d12 2
a13 1
int samekey(int TDno, char *Workarea, int TDno2, char *Workarea2)
d15 6
a20 6
    TDef *tdef1; // edi@@1
    TDef *tdef2; // esi@@4
    int v6;
    int v7;
    char *Buffer; // [sp+24h] [bp-14h]@@4
    char *src; // [sp+28h] [bp-10h]@@3
d22 1
a22 1
	printf("samekey\n");
d27 1
a27 1
        while ( tdef1->TDFtype & 1 )            // &1 == Key field
d29 2
a30 28
            tdef2 = tblrow(TDno2);
            Buffer = Workarea2;
            /*if ( tdef2->TDFentry )
            {
                if ( tdef2->TDFentry == tdef1->TDFentry )
                {
LABEL_8:
                    if ( tdef2->TDFentry )
                    {
                        if ( _cmpattrib(src, tdef1->TDFsize, Buffer, tdef2->TDFsize, tdef1->TDFtype)
                          || ((tdef1->TDFtype & 2) ? (v6 = _fwidth(src, tdef1->TDFsize, tdef1->TDFtype)) : (v6 = tdef1->TDFsize),
                              (tdef2->TDFtype & 2) ? (v7 = _fwidth(Buffer, tdef2->TDFsize, tdef2->TDFtype)) : (v7 = tdef2->TDFsize), v6 != v7))
                            return 0;	// exit_fail. They Key areas don't match
                    }
                }
                else
                {
                    while ( 1 )
                    {
                        Buffer += tdef2->TDFsize;
                        ++tdef2;
                        if ( !tdef2->TDFentry )
                            break;
                        if ( tdef2->TDFentry == tdef1->TDFentry )
                            goto LABEL_8;
                    }
                }
            }*/
d38 1
a38 1
						return 0;	// exit_fail. The Key areas don't match
d46 1
a46 1
        return 1;	// exit_success. they match
d49 1
a49 1
        return 0;	// exit_fail. They Key areas don't match
@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
int samekey(int TDno, char *a2, int TDno2, char *a4)
d16 2
a17 4
    int v6; // eax@@11
    int v7; // eax@@14
    signed int result; // eax@@17
    int v9; // [sp+20h] [bp-18h]@@13
d21 1
d25 1
a25 1
        src = a2;
d29 2
a30 2
            Buffer = a4;
            if ( tdef2->TDFentry )
d38 3
a40 3
                          || (!(tdef1->TDFtype & 2) ? (v6 = tdef1->TDFsize) : (v6 = _fwidth(src, tdef1->TDFsize, tdef1->TDFtype)),
                              (v9 = v6, !(tdef2->TDFtype & 2)) ? (v7 = tdef2->TDFsize) : (v7 = _fwidth( Buffer, tdef2->TDFsize, tdef2->TDFtype)), v9 != v7) )
                            goto LABEL_17;
d55 13
a67 1
            }
d69 1
a69 1
            ++tdef1;
d71 1
a71 1
        result = 1;
d74 1
a74 5
    {
LABEL_17:
        result = 0;
    }
    return result;
@
