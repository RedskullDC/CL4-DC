head	1.2;
access;
symbols;
locks
	leslie:1.2; strict;
comment	@ * @;


1.2
date	2014.08.27.03.28.33;	author leslie;	state Exp;
branches;
next	1.1;

1.1
date	2014.08.27.01.16.43;	author leslie;	state Exp;
branches;
next	;


desc
@initial checkin
@


1.2
log
@few vars removed. extra comments
@
text
@#ifndef PREVREC_C
#define PREVREC_C

#include "DBdefs.h"
#include "cl4.h"

//*not* public in libcl4

int _prevr(int TDNo, char *WorkArea,short SkipRecs, POS *Pos, EXPR *SelectExpr)
{
	TDinfo *v5; // eax@@1
	TDinfo *TDptr; // esi@@1
	int v7; // eax@@1
	int RecsFound; // edx@@3
	NODE_1 *N1p; // edi@@20

	//printf("_prevr( TDno: x%04X (%3d),WorkArea = %s,SkipRecs = %d, POS = x%08X, EXPR: x%08X)\n", TDNo,TDNo,WorkArea,SkipRecs,Pos,SelectExpr);

	v5 = _chktd(TDNo);
	TDptr = v5;
	if ( v7 = check_bup_sem(v5->TDDBinfo))
		derror(v7, 0, TDptr);
	//printf("_prevr: v7 = %d\n", v7);
	RecsFound = 0;
	if ( (TDptr->field_0 & 0x0210) != 0x0210 )
	{
		if ( !(TDptr->field_0 & 0x0200) )
		{
			relnode(TDptr->TDNodePtr);
			TDptr->TDNodePtr = 0;
			TDptr->field_0 |= 0x0200u;
		}
		if ( TDptr->field_0 & 0x0002 )					// Only true for temp tables?
			return _pickprev(TDptr, WorkArea, SkipRecs, Pos);
		
		if ( !TDptr->KeyBuf1 )
			newseq(TDptr);			// allocate mem for TDptr->KeyBuf1 and TDptr->KeyBuf2
		
		if ( Pos )
			cdbrindex(Pos, 0);		// Pointless code?
		
		TDptr->Key1Size = 0;
		if ( SkipRecs > 0 )
		{
			while ( 1 )
			{
				while ( 1 )
				{
					N1p = _stepbak(TDptr);
					if ( N1p )
						break;
LABEL_23:
					TDptr->field_0 |= 0x0010u;
LABEL_24:
					if ( !(TDptr->field_0 & 0x0010) )
					{
						if ( ++RecsFound < SkipRecs )
							continue;
					}
					if ( !RecsFound )
						relseq(TDptr);
					return RecsFound;
				}
				
				if ( _match(N1p->Data, SelectExpr, TDptr->TableDefs) )
					break;

				if ( _beyond(SelectExpr, 0x30u, N1p->Data, TDptr->TableDefs) )	// 0x30 == greater than or equal	'>='
				{
					TDptr->field_0 |= 0x0010u;
					if ( N1p )
						goto LABEL_24;
					goto LABEL_23;
				}
			}

			if ( !TDptr->Key1Size )
			{
				TDptr->Key1Size = cpybuf(TDptr->KeyBuf1, N1p->Data, TDptr->TDKeySize);
				TDptr->field_3A = 2;
			}
			tuptor(WorkArea, Pos, N1p->Data, TDptr->TableDefs);

			if ( N1p )
				goto LABEL_24;
			goto LABEL_23;
		}
		if ( !RecsFound )
			relseq(TDptr);
	}
	return RecsFound;
}

// HACK! These should call through xenter()

int prevr(int TDno, char *WorkArea, POS *Pos, EXPR *Expr)
{
  return _prevr(TDno, WorkArea, 1, Pos, Expr);
}

int getprev(int TDno, char *WorkArea, EXPR *Expr)
{
  return _prevr(TDno, WorkArea, 1, 0, Expr);
}

int prevset(int TDno, char *WorkArea, int SkipRecs, POS *Pos, EXPR *Expr)
{
  return _prevr(TDno, WorkArea, SkipRecs, Pos, Expr);
}


#endif
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
	int v8; // edx@@3
a15 1
	int v11; // [sp+18h] [bp-10h]@@12
d24 1
a24 1
	v8 = 0;
a42 1
		v11 = 0;
d57 1
a57 1
						if ( ++v11 < SkipRecs )
d60 1
a60 3
					v8 = v11;
					if ( !v11 )
					{
d62 1
a62 3
						v8 = 0;
					}
					return v8;
d88 1
a88 3
		v8 = v11;
		if ( !v11 )
		{
a89 2
			v8 = 0;
		}
d91 1
a91 1
	return v8;
@
