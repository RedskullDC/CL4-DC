head	1.3;
access;
symbols;
locks
	leslie:1.3; strict;
comment	@ * @;


1.3
date	2015.04.08.04.35.07;	author leslie;	state Exp;
branches;
next	1.2;

1.2
date	2014.11.27.09.28.26;	author leslie;	state Exp;
branches;
next	1.1;

1.1
date	2014.11.07.04.53.31;	author leslie;	state Exp;
branches;
next	;


desc
@initial checkin
@


1.3
log
@intermediate
@
text
@#ifndef DISPLAY_FIELD_C
#define DISPLAY_FIELD_C

#include <stdio.h>
#include <stdarg.h>		// for var args stuff
#include <stdlib.h>		// for drand48(), strtod()
#include "DBdefs.h"
#include "cl4.h"

void dispfld(XTAB *xtab, FLDdesc *fld, int show, int a4, int a5, int a6)
{
    //int v7; // eax@@6
    char *v8; // edx@@15
    int MaxLen; // [sp+2Ch] [bp-42Ch]@@1
    int Attr; // [sp+3Ch] [bp-41Ch]@@12
    int Column; // [sp+40h] [bp-418h]@@10
    int Line; // [sp+44h] [bp-414h]@@10
    int TTno; // [sp+48h] [bp-410h]@@5
	char FLDtype;
    char a3[1032]; // [sp+4Fh] [bp-409h]@@5

    MaxLen = getwid(xtab);
    if ( MaxLen )
    {
        gettdfno(ENARR(xtab->VarExpNo), &TTno, &FLDtype, 1);
        if ( fld->FLDtype == 'C' )
			MaxLen = (fld->FLDlen > MaxLen) ? MaxLen : fld->FLDlen ;

		if ( a6 )		// Only true when called from redisplay()
        {
            Line = xtab->C_Y;
            Column = xtab->C_X;
        }
        else
            clgetyx(xtab, &Column, &Line, yx_answer);	// position to "answer" field

        Attr = xtab->Attr;
        if ( show )					// show field on screen
        {
            fldtobuf(a3, fld, MaxLen);
            if ( fld->FLDtype == 'D' && strlen(a3) > MaxLen )
            {
                MaxLen = 10;		// max length for dates is 10 chars "dd/mm/yyyy"
                xtab->width = 10;
            }
            if ( rawdisplay )
                v8 = a3;
            else
                v8 = convstr(a3, 1);
        }
        else						// else clear the space on screen where this field is displayed
        {
            getnats(xtab->Attr, 1);
            Attr = 0x3Fu;
            if ( Column <= 0 )
                Column = 1;
            fillbuf(a3, MaxLen, ' ');	// fill with <SPC>
            a3[MaxLen] = 0;
            v8 = a3;
        }
        toscreen(Column, Line, a5, MaxLen, v8, Attr, 1, a4);
    }
}

#endif

@


1.2
log
@priot to ENARR() fixes
@
text
@d10 1
a10 1
void dispfld(XTAB *xtab, FLDdesc *fld, int arg8, int a4, int a5, int a6)
d25 1
a25 1
        gettdfno(xtab->VarExpNo ? &enarr.TableAddr[xtab->VarExpNo - 1] : 0, &TTno, &FLDtype, 1);
d38 1
a38 1
        if ( arg8 )
d51 1
a51 1
        else
d57 1
a57 1
            fillbuf(a3, MaxLen, ' ');
@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
    int v7; // eax@@6
d27 3
a29 7
        {
            v7 = fld->FLDlen;
            if ( v7 >= MaxLen )
                v7 = MaxLen;
            MaxLen = v7;
        }
        if ( a6 )
d35 1
a35 1
            clgetyx(xtab, &Column, &Line, 1);
d43 1
a43 1
                MaxLen = 10;
@
