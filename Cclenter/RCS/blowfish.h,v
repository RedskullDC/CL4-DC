head	1.2;
access;
symbols;
locks
	leslie:1.2; strict;
comment	@ * @;


1.2
date	2016.04.06.05.50.27;	author leslie;	state Exp;
branches;
next	1.1;

1.1
date	2016.04.06.05.37.32;	author leslie;	state Exp;
branches;
next	;


desc
@original imported source
@


1.2
log
@initial clean-up, prior to CL4 specifics
@
text
@/*
 * Author     :  Paul Kocher
 * E-mail     :  pck@@netcom.com
 * Date       :  1997
 * Description:  C implementation of the Blowfish algorithm.
 */

#define MAXKEYBYTES 56          /* 448 bits */

typedef struct 
{
	unsigned long P[16 + 2];
	unsigned long S[4][256];
} BLOWFISH_CTX;



void Blowfish_Init(BLOWFISH_CTX *ctx, unsigned char *key, int keyLen);

void Blowfish_Encrypt(BLOWFISH_CTX *ctx, unsigned long *xl, unsigned long *xr);

void Blowfish_Decrypt(BLOWFISH_CTX *ctx, unsigned long *xl, unsigned long *xr);

int Blowfish_Test(BLOWFISH_CTX *ctx);       /* 0=ok, -1=bad */

@


1.1
log
@Initial revision
@
text
@d10 4
a13 8


typedef struct {

  unsigned long P[16 + 2];

  unsigned long S[4][256];

d20 1
a20 2
void Blowfish_Encrypt(BLOWFISH_CTX *ctx, unsigned long *xl, unsigned long
*xr);
d22 1
a22 2
void Blowfish_Decrypt(BLOWFISH_CTX *ctx, unsigned long *xl, unsigned long
*xr);
a25 4




@
