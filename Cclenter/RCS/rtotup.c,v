head	1.1;
access;
symbols;
locks
	leslie:1.1; strict;
comment	@ * @;


1.1
date	2015.04.21.06.17.15;	author leslie;	state Exp;
branches;
next	;


desc
@initial checkin
@


1.1
log
@Initial revision
@
text
@#ifndef RECTOTUP_C
#define RECTOTUP_C

#include "DBdefs.h"
#include "cl4.h"
#include "lvarnames.h"			// for bit field values

short rtotup(char *dest, char *src, POS *Pos, TDef *TDefptr)
{
	TDef *tdef;
	char *buffptr;
	short v6;
	short v7;
	int v8;

	tdef = TDefptr;
	for ( buffptr = dest; tdef->TDFentry; ++tdef )
	{
		if ( Pos )
		{
			v7 = cdbrindex(Pos, tdef->TDFentry);
			if ( v7 >= 0 )
				v8 = xtodom(buffptr, tdef->TDFsize, tdef->TDFtype, &src[v7]);
			else
				v8 = cdbfclear(buffptr, tdef->TDFsize, tdef->TDFtype); // if no Pos entry, just zap the space
			buffptr += v8;
		}
		else // assume src buffer is laid out in TDef order
		{
			if ( tdef->TDFtype & tdf_STRING )	// string variable
				v6 = _fwidth(src, tdef->TDFsize, tdef->TDFtype);
			else
				v6 = tdef->TDFsize;
			buffptr += cpybuf(buffptr, src, v6); // dest buffer is (possibly) packed
			src += tdef->TDFsize;
		}
	}
	return (short) (buffptr - dest);
}

#endif
@
