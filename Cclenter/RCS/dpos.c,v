head	1.1;
access;
symbols;
locks
	leslie:1.1; strict;
comment	@ * @;


1.1
date	2014.07.16.01.57.17;	author leslie;	state Exp;
branches;
next	;


desc
@Descending position
@


1.1
log
@Initial revision
@
text
@#ifndef DPOS_C
#define DPOS_C

#include <stdio.h>
#include <stdarg.h>		// for var args stuff
#include "DBdefs.h"
#include "cl4.h"

// descending pos   [see also _ipos()]

void _dpos(DPOS *dpos, int PageNo, short Depth, TDinfo *TDptr)
{
	int PageNo2;
	short v5;
	PAGE *page;

	PageNo2 = PageNo;
	dpos->field_8 = 0;
	dpos->NumEntries = 0;
	
	v5 = Depth - 1;		// How many branches does the tree descend into...
	while ( v5 > 0 )
	{
		page = _indexpg(TDptr, PageNo2);
		dpos->field_8 = PageNo2;
		dpos->NumEntries = page->NumEntries;
		PageNo2 = mstol(&page->DataStart[4 * dpos->NumEntries]);
		--v5;
	}
	
	dpos->PageNo = PageNo2;
	dpos->field_4 = 0;
}

#endif
@
