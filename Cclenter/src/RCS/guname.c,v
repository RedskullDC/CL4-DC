head	1.2;
access;
symbols;
locks
	leslie:1.2; strict;
comment	@ * @;


1.2
date	2016.05.09.03.38.37;	author leslie;	state Exp;
branches;
next	1.1;

1.1
date	2016.01.14.05.08.42;	author leslie;	state Exp;
branches;
next	;


desc
@initial
@


1.2
log
@intermediate
@
text
@#ifndef GUNAME_C
#define GUNAME_C

#include <sys/types.h>	// for user calls
#include <pwd.h>
#include "DBdefs.h"
#include "cl4.h"


// ****  Different functionality to libcl4 ***

char* gelogin()
{
	struct passwd *pwd;	// not typedef'ed in pwd.h
	char *UserName;
	char *v3;

	pwd = getpwuid(geteuid());
	UserName = "";
	if ( pwd )
	{
		
		v3 = (char*)mstrcpy(pwd->pw_name, 0);	// Copy to Global mem.
		UserName = ftrim(v3);
	}
	//printf("gelogin: %s\n",UserName);
	return UserName;
}

// same functionality?, doesn't exist in libcl4 
void glogin(char *Buffer)
{
    struct passwd *pwd;
	
    pwd = getpwuid(getuid());
    if ( pwd )
        cdbcpystr(Buffer, pwd->pw_name, 0);
    else
        *Buffer = 0;
    ftrim(Buffer);
	//printf("glogin: %s\n",Buffer);

}

// doesn't exist in libcl4 
void guname(char *Dest)
{
    struct passwd *pwd; // eax@@1

    pwd = getpwuid(getuid());
    if ( pwd )
        cdbcpystr(Dest, pwd->pw_gecos, 0);
    else
        *Dest = 0;
    ftrim(Dest);
}

// guserdir() not called in clenter

#endif
@


1.1
log
@Initial revision
@
text
@a13 1
	__uid_t v0;
d18 1
a18 2
	v0 = geteuid();
	pwd = getpwuid(v0);
d33 3
a35 5
    __uid_t v1; // eax@@1
    struct passwd *pwd; // eax@@1

    v1 = getuid();
    pwd = getpwuid(v1);
d41 2
a47 1
    __uid_t v1; // eax@@1
d50 1
a50 2
    v1 = getuid();
    pwd = getpwuid(v1);
@
