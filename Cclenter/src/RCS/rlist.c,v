head	1.1;
access;
symbols;
locks
	leslie:1.1; strict;
comment	@ * @;


1.1
date	2016.01.15.04.09.57;	author leslie;	state Exp;
branches;
next	;


desc
@initial
@


1.1
log
@Initial revision
@
text
@#ifndef RLIST_C
#define RLIST_C

#include <stdio.h>
#include <stdarg.h>		// for var args stuff
#include <ctype.h>		// tolower() etc.
#include <stdlib.h>		// strtod() etc.
#include "DBdefs.h"
#include "cl4.h"
#include "lvarnames.h"			// for bit field values

RLARR *_rlist(RLIST *rlist, short a2, int RecSize)
{
    RLIST	*v3;
	RLARR	*rlarr;
	short	v4;
	
    v3 = rlist;
    v4 = a2;
    for ( rlarr = 0; v4 > 0; v3++ )
    {
        rlarr = (RLARR *)ealloc(RecSize + 36, rlarr);// chained structure
		// rlarr->NextRLARR is implicitly set to previous RLARR by ealloc();
        rlarr->PageNo			= v3->PageNo;
        rlarr->Depth			= v3->Depth;
        rlarr->field_1C			= 0;
        rlarr->Dpos.field_8		= 0;
        rlarr->Dpos.PageNo		= 0;
        rlarr->Dpos.NumEntries	= 0;
        rlarr->Dpos.field_4		= 0;
        --v4;
    }
    return rlarr;
}

#endif
@
