head	1.1;
access;
symbols;
locks
	leslie:1.1; strict;
comment	@ * @;


1.1
date	2016.07.05.06.55.51;	author leslie;	state Exp;
branches;
next	;


desc
@add cgiprint function
@


1.1
log
@Initial revision
@
text
@#ifndef PRINT_MISC_C
#define PRINT_MISC_C

#include <stdio.h>
#include <stdarg.h>		// for var args stuff
#include "DBdefs.h"
#include "cl4.h"

void eprint(const char *format, ...)
{
	va_list va;

	//printf("eprint() called\n");
	va_start(va, format);
	if ( !fp_1 )
		fp_1 = stderr;
	vfprintf(fp_1, format, va);
	fflush(fp_1);
	va_end(va);	// keep va macros happy

}

void print(const char *format, ...)
{
	va_list va;

	va_start(va, format);
	vfprintf(stdout, format, va);
	fflush(stdout);
  	va_end(va);	// keep va macros happy

}

//	***	not called by libcl4 ***
void oprint(FILE *s, const char *format, ...)
{
	va_list va;

	va_start(va, format);
	vfprintf(s, format, va);
	va_end(va);	// keep va macros happy

}

void dprint(const char *format, ...)
{
    FILE *v1; // edi@@1
    time_t timer; // [sp+18h] [bp-10h]@@1
    va_list va; // [sp+34h] [bp+Ch]@@1

    va_start(va, format);
    v1 = fopen64("/tmp/cldebug", "a+");
    time(&timer);
    if ( v1 )
    {
        fprintf(v1, "%.24s: pid=%d ", ctime(&timer), getpid());
        vfprintf(v1, format, va);
        fflush(v1);
        fclose(v1);
    }
	va_end(va);

}

//cgiprint()


#endif
@
