head	1.1;
access;
symbols;
locks
	leslie:1.1; strict;
comment	@ * @;


1.1
date	2015.08.25.03.16.07;	author leslie;	state Exp;
branches;
next	;


desc
@initial
@


1.1
log
@Initial revision
@
text
@#ifndef CA_FUNCS_C
#define CA_FUNCS_C

#include <stdio.h>
#include <stdarg.h>		// for var args stuff
#include <ctype.h>		// tolower() etc.
#include <stdlib.h>		// strtod() etc.
#include "DBdefs.h"
#include "cl4.h"
#include "lvarnames.h"			// for bit field values

char **camake(char *a1, char a2)
{
    int v2; // esi@@1
    char **v3; // esi@@4
    char *v4; // eax@@6
    char **v6; // [sp+14h] [bp-14h]@@4
    char *a3; // [sp+18h] [bp-10h]@@1

    v2 = 0;
    a3 = a1;
    while ( *extstr(a3, a2, &a3) )
        ++v2;

    v6 = (char **)mmalloc(4 * v2 + 4);
    v3 = v6;
    a3 = a1;
    while ( 1 )
    {
        v4 = extstr(a3, a2, &a3);
        if ( !*v4 )
            break;
        *v3 = mstrcpy(v4, 0);
        ++v3;
    }
    *v3 = 0;
    return v6;
}

int cafree(char **ptr)
{
    char **v1; // esi@@1
    char *v2; // ST00_4@@3

    v1 = ptr;
    if ( ptr )
    {
        if ( *ptr )
        {
            do
            {
                v2 = *v1;
                v1++;
                mfree_0(v2);
            }
            while ( *v1 );
        }
        mfree_0(ptr);
    }
    return 0;
}

#endif
@
